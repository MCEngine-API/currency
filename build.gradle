plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

version = project.findProperty("${project.name}-version") ?: 'unspecified'
group = 'io.github.mcengine'

allprojects {
    group = 'io.github.mcengine'

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = uri("https://maven.pkg.github.com/MCEngine/mcengine")
            credentials {
                username = System.getenv("GIT_USER")
                password = System.getenv('MCENGINE_GITHUB_TOKEN_PKG_PUBLISH_CURRENCY') ?: System.getenv('MCENGINE_GITHUB_TOKEN_PKG_PUBLISH')
            }
        }
        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'

            // As of Gradle 5.1, you can limit this to only those
            // dependencies you expect from it
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }
    }
}

subprojects {
    apply plugin: 'java'

    // Disable the 'jar' task if needed
    tasks.named('jar').configure {
        enabled = false
    }

    def excludeBuildProjects = [':server']
    if (project.path in excludeBuildProjects) {
        tasks.matching { it.name == 'shadowJar' }.configureEach {
            enabled = false
        }
    }

    // Get submodules info, ensure version property is not null
    version = project.findProperty("${project.name}-version") ?: 'unspecified'

	shadowJar {
		archiveClassifier = null
        destinationDirectory.set(file("${rootProject.buildDir}/libs"))

        // Change the JAR name if path starts with 'server:{sub-projectName}'
        if (project.path.startsWith(':server') || project.name == 'common') {
            archiveBaseName.set("MCEngine-${project.name}")
        } else {
            archiveBaseName.set(project.name)
        }
	}

    if (project.path.startsWith(':server:')) {
        dependencies {
            implementation project(path: ':mcengine-currency-api', configuration: 'shadow')
            implementation project(path: ':common', configuration: 'shadow')
        }
    }

    // Bukkit server specific configuration
    if (project.name == 'spigotmc') {
        processResources {
            def props = [version: version]
            inputs.properties(props)
            filteringCharset 'UTF-8'
            filesMatching('plugin.yml') {
                expand(props)
            }
        }
    }

    if (project.name == 'mcengine-currency-api') {
        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    name = 'GitHubPackages'
                    url = uri('https://maven.pkg.github.com/MCEngine/currency')
                    credentials {
                        username = System.getenv('GIT_USER')
                        password = System.getenv('MCENGINE_GITHUB_TOKEN_PKG')
                    }
                }
            }
            publications {
                mavenJava(MavenPublication) {
                    artifact(tasks.named('shadowJar').get())

                    pom {
                        name.set('MCEngine Currency API')
                        description.set('API for currency operations in MCEngine projects')
                        url.set('https://github.com/MCEngine/currency')

                        scm {
                            connection.set('scm:git:git://github.com/MCEngine/currency.git')
                            developerConnection.set('scm:git:ssh://github.com:MCEngine/currency.git')
                            url.set('https://github.com/MCEngine/currency')
                        }

                        developers {
                            developer {
                                id.set('JetsadaWijit')
                                name.set('Jetsada Wijit')
                                email.set('jetsadawijit@outlook.com')
                                url.set('https://github.com/JetsadaWijit')
                            }
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation project(path: ':mcengine-currency-api', configuration: 'shadow')
    implementation project(path: ':common', configuration: 'shadow')

    // Dynamically include all server projects
    rootProject.subprojects.each { subproject ->
        if (subproject.name != 'mcengine-currency-api' && subproject.name != 'common') {
            def serverProjectPath = subproject.path.startsWith(':server') ? subproject.path : ":server:${subproject.name}"
            implementation project(path: serverProjectPath, configuration: 'shadow')
        }
    }
}

shadowJar {
    version = null
    archiveClassifier = null
    archiveBaseName.set('MCEngineCurrency')
}

// Disable the 'jar' task if needed
tasks.named('jar').configure {
    enabled = false
}

build.dependsOn(shadowJar)
